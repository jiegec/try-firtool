// Generated by CIRCT unknown git version
// VCS coverage exclude_file
module mem_combMem(	// src/main/scala/Memory.scala:10:24
  input  [4:0]  R0_addr,
  input         R0_en,
                R0_clk,
  input  [4:0]  W0_addr,
  input         W0_en,
                W0_clk,
  input  [31:0] W0_data,
  output [31:0] R0_data
);

  reg [31:0] Memory[0:31];	// src/main/scala/Memory.scala:10:24
  reg        _GEN;	// src/main/scala/Memory.scala:10:24
  reg [4:0]  _GEN_0;	// src/main/scala/Memory.scala:10:24
  always @(posedge R0_clk) begin	// src/main/scala/Memory.scala:10:24
    _GEN <= R0_en;	// src/main/scala/Memory.scala:10:24
    _GEN_0 <= R0_addr;	// src/main/scala/Memory.scala:10:24
  end // always @(posedge)
  always @(posedge W0_clk) begin	// src/main/scala/Memory.scala:10:24
    if (W0_en)	// src/main/scala/Memory.scala:10:24
      Memory[W0_addr] <= W0_data;	// src/main/scala/Memory.scala:10:24
  end // always @(posedge)
  assign R0_data = _GEN ? Memory[_GEN_0] : 32'bx;	// src/main/scala/Memory.scala:10:24
endmodule

module Memory(	// <stdin>:3:10
  input         clock,	// <stdin>:4:11
                reset,	// <stdin>:5:11
  input  [4:0]  raddr,	// src/main/scala/Memory.scala:4:17
                waddr,	// src/main/scala/Memory.scala:7:17
  input  [31:0] wdata,	// src/main/scala/Memory.scala:8:17
  output [31:0] rdata	// src/main/scala/Memory.scala:5:17
);

  mem_combMem mem_ext (	// src/main/scala/Memory.scala:10:24
    .R0_addr (raddr),
    .R0_en   (1'h1),	// <stdin>:3:10
    .R0_clk  (clock),
    .W0_addr (waddr),
    .W0_en   (1'h1),	// <stdin>:3:10
    .W0_clk  (clock),
    .W0_data (wdata),
    .R0_data (rdata)
  );
endmodule

